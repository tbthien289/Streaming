// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Stream.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package streaming;

public interface PlayerPrx extends Ice.ObjectPrx
{
    public void addTrack(String name, String album, String author, String singer, String path);

    public void addTrack(String name, String album, String author, String singer, String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addTrack(String name, String album, String author, String singer, String path);

    public Ice.AsyncResult begin_addTrack(String name, String album, String author, String singer, String path, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_addTrack(String name, String album, String author, String singer, String path, Ice.Callback __cb);

    public Ice.AsyncResult begin_addTrack(String name, String album, String author, String singer, String path, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_addTrack(String name, String album, String author, String singer, String path, Callback_Player_addTrack __cb);

    public Ice.AsyncResult begin_addTrack(String name, String album, String author, String singer, String path, java.util.Map<String, String> __ctx, Callback_Player_addTrack __cb);

    public void end_addTrack(Ice.AsyncResult __result);

    public int deleteTrack(String name);

    public int deleteTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteTrack(String name);

    public Ice.AsyncResult begin_deleteTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteTrack(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteTrack(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteTrack(String name, Callback_Player_deleteTrack __cb);

    public Ice.AsyncResult begin_deleteTrack(String name, java.util.Map<String, String> __ctx, Callback_Player_deleteTrack __cb);

    public int end_deleteTrack(Ice.AsyncResult __result);

    public String searchTrack(String name);

    public String searchTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_searchTrack(String name);

    public Ice.AsyncResult begin_searchTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_searchTrack(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_searchTrack(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_searchTrack(String name, Callback_Player_searchTrack __cb);

    public Ice.AsyncResult begin_searchTrack(String name, java.util.Map<String, String> __ctx, Callback_Player_searchTrack __cb);

    public String end_searchTrack(Ice.AsyncResult __result);

    public String playTrack(String name);

    public String playTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_playTrack(String name);

    public Ice.AsyncResult begin_playTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_playTrack(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_playTrack(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_playTrack(String name, Callback_Player_playTrack __cb);

    public Ice.AsyncResult begin_playTrack(String name, java.util.Map<String, String> __ctx, Callback_Player_playTrack __cb);

    public String end_playTrack(Ice.AsyncResult __result);

    public String getListTrack();

    public String getListTrack(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListTrack();

    public Ice.AsyncResult begin_getListTrack(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListTrack(Ice.Callback __cb);

    public Ice.AsyncResult begin_getListTrack(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListTrack(Callback_Player_getListTrack __cb);

    public Ice.AsyncResult begin_getListTrack(java.util.Map<String, String> __ctx, Callback_Player_getListTrack __cb);

    public String end_getListTrack(Ice.AsyncResult __result);

    public String streamTrack(String name);

    public String streamTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_streamTrack(String name);

    public Ice.AsyncResult begin_streamTrack(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_streamTrack(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_streamTrack(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_streamTrack(String name, Callback_Player_streamTrack __cb);

    public Ice.AsyncResult begin_streamTrack(String name, java.util.Map<String, String> __ctx, Callback_Player_streamTrack __cb);

    public String end_streamTrack(Ice.AsyncResult __result);
}
